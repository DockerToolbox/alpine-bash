name: pipeline
on:
  push:
  pull_request:
  schedule:
    - cron:  '0 2 * * 1'
    
jobs:
  alpine:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ '3.11', '3.12', '3.13', '3.14' ]
    name: Build on Alpine Linux ${{ matrix.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker
        uses: docker-practice/actions-setup-docker@master
      - name: Generate Dockerfile for Alpine Linux ${{ matrix.version }}
        run: Dockerfiles/${{ matrix.version }}/manage.sh --generate
      - name: Build on Alpine Linux ${{ matrix.version }}
        run: Dockerfiles/${{ matrix.version }}/manage.sh --build --clean
      - name: Login to Docker Hub
        run: echo ${{secrets.DOCKERHUB_PASSWORD}} | docker login --username ${{secrets.DOCKERHUB_USERNAME}} --password-stdin
      - name: Publish Container
        run: Dockerfiles/${{ matrix.version }}/manage.sh --publish
      - name: Login to GitHub Container Registry
        run: echo ${{secrets.GHCR_PASSWORD}} | docker login ghcr.io --username ${{secrets.GHCR_USERNAME}} --password-stdin
      - name: Publish Container
        run: Dockerfiles/${{ matrix.version }}/manage.sh --publish --ghcr
  awesomebot:
    name: Awesomebot
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby 3.0
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
      - name: Run Awesomebot
        env:
          FLAGS: "default"
          EXCLUDE_FILES: "CHANGELOG.md,Config/.*"
          WHITELIST: "https://img.shields.io"
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/awesomebot/master/pipeline.sh)
  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Shellcheck
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/shellcheck/master/pipeline.sh)
  yaml-lint:
    name: YAML Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby 3.0
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
      - name: Run YAML-Lint
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/yaml-lint/master/pipeline.sh)
  slack-workflow-status:
    if: always()
    name: Slack Post Workflow Notification
    needs:
      - alpine
      - awesomebot
      - shellcheck
      - yaml-lint
    runs-on: ubuntu-latest
    steps:
      - name: Slack Post Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          include_jobs: true
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
